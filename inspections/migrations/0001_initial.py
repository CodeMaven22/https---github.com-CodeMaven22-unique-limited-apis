# Generated by Django 5.2.4 on 2025-07-30 12:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('audits', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_type', models.CharField(choices=[('medication_audit_comprehensive', 'Medication Audit Comprehensive'), ('weekly_medication_audit', 'Weekly Medication Audit'), ('fire_alarm_weekly', 'Fire Alarm Weekly'), ('smoke_alarm_weekly', 'Smoke Alarm Weekly'), ('worker_inspection', 'Worker Inspection'), ('health_safety_checklist', 'Health & Safety Checklist'), ('first_aid_checklist', 'First Aid Checklist')], max_length=40)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('draft', 'Draft')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_by_role', models.CharField(choices=[('admin', 'Admin'), ('inspector', 'Inspector'), ('worker', 'Worker')], max_length=20)),
                ('inspection_date', models.DateTimeField(blank=True, null=True)),
                ('inspection_comments', models.TextField(blank=True)),
                ('approval_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('draft', 'Draft')], max_length=20, null=True)),
                ('approval_comments', models.TextField(blank=True)),
                ('Approval_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_inspections', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to=settings.AUTH_USER_MODEL)),
                ('inspection_conducted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspected_inspections', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FireAlarmWeeklyInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('point_checked', models.CharField(blank=True, max_length=100, null=True)),
                ('alarm_functional', models.BooleanField(default=False)),
                ('call_points_accessible', models.BooleanField(default=False)),
                ('emergency_lights_working', models.BooleanField(default=False)),
                ('faults_identified_details', models.TextField(blank=True, null=True)),
                ('action_taken_details', models.TextField(blank=True, null=True)),
                ('management_book_initials', models.CharField(blank=True, max_length=10, null=True)),
                ('staff_signature_check', models.CharField(blank=True, max_length=255, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fire_alarm_weekly', to='inspections.baseinspection')),
            ],
        ),
        migrations.CreateModel(
            name='FireAlarmAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_audit', models.DateField(blank=True, null=True)),
                ('audit_comments', models.TextField(blank=True, null=True)),
                ('audit_passed', models.BooleanField(default=False)),
                ('auditor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fire_alarm_audits', to='audits.auditor')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fire_alarm_audit', to='inspections.firealarmweeklyinspection')),
            ],
        ),
        migrations.CreateModel(
            name='FirstAidChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_aid_kit_location', models.CharField(blank=True, help_text='Location where the first aid kit is stored', max_length=255, null=True)),
                ('date_of_inspection', models.DateField(blank=True, help_text='Date when the inspection was conducted', null=True)),
                ('comments', models.TextField(blank=True, help_text='Any additional comments about the first aid inspection', null=True)),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='first_aid_checklist', to='inspections.baseinspection')),
            ],
            options={
                'verbose_name': 'First Aid Checklist',
                'verbose_name_plural': 'First Aid Checklists',
            },
        ),
        migrations.CreateModel(
            name='FirstAidChecklistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(help_text='Name of the first aid item', max_length=255)),
                ('quantity', models.CharField(blank=True, help_text='Required/available quantity of the item', max_length=50, null=True)),
                ('available', models.BooleanField(default=False, help_text='Whether the item is available in the required quantity')),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inspections.firstaidchecklist')),
            ],
            options={
                'verbose_name': 'First Aid Item',
                'verbose_name_plural': 'First Aid Items',
                'ordering': ['item_name'],
            },
        ),
        migrations.CreateModel(
            name='HealthSafetyChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, help_text='Location where the health and safety inspection was conducted', max_length=255, null=True)),
                ('previous_concerns_addressed', models.BooleanField(default=False, help_text='Have previous health and safety concerns been addressed?')),
                ('policy_up_to_date_local_health_safety', models.BooleanField(default=False, help_text='Is the local health and safety policy up to date?')),
                ('staff_issued_personal_copy_policy_told_text', models.BooleanField(default=False, help_text='Have staff been issued with personal copies of the policy?')),
                ('health_safety_standing_item_agenda_previous_staff_meeting', models.BooleanField(default=False, help_text='Has health & safety been a standing item on staff meeting agendas?', verbose_name='Health & Safety on Staff Meeting Agenda')),
                ('all_staff_received_training_health_safety_procedures', models.BooleanField(default=False, help_text='Have all staff received training on health & safety procedures?')),
                ('new_staff_receive_training_beginning_employment', models.BooleanField(default=False, help_text='Do new staff receive training at the beginning of employment?')),
                ('temporary_staff_receive_necessary_training', models.BooleanField(default=False, help_text='Do temporary staff receive necessary health & safety training?')),
                ('staff_carry_out_manual_handling_risk_assessment', models.BooleanField(default=False, help_text='Do staff carry out manual handling risk assessments?')),
                ('equipment_used_mobility_risk_assessment', models.BooleanField(default=False, help_text='Is there a risk assessment for equipment used for mobility?')),
                ('computer_workstation_assessments_carried_out_recorded', models.BooleanField(default=False, help_text='Have computer workstation assessments been carried out and recorded?')),
                ('working_conditions_suitable_noise_lighting_ventilation_temperature', models.BooleanField(default=False, help_text='Are working conditions suitable (noise, lighting, ventilation, temperature)?', verbose_name='Suitable Working Conditions')),
                ('furniture_furnishings_good_condition_suitable_stable', models.BooleanField(default=False, help_text='Is furniture in good condition, suitable and stable?', verbose_name='Furniture Condition')),
                ('equipment_suitable_maintained_good_condition', models.BooleanField(default=False, help_text='Is equipment suitable and maintained in good condition?', verbose_name='Equipment Condition')),
                ('floor_surfaces_acceptable_condition', models.BooleanField(default=False, help_text='Are floor surfaces in acceptable condition?')),
                ('fire_doors_kept_closed', models.BooleanField(default=False, help_text='Are fire doors kept closed?')),
                ('notices_informing_staff_what_to_do_fire', models.BooleanField(default=False, help_text='Are there notices informing staff what to do in case of fire?', verbose_name='Fire Procedure Notices')),
                ('staff_know_what_to_do_event_fire', models.BooleanField(default=False, help_text='Do staff know what to do in the event of a fire?', verbose_name='Staff Fire Procedure Knowledge')),
                ('adequate_first_aiders_available', models.BooleanField(default=False, help_text='Are there adequate first aiders available?')),
                ('easy_to_find_first_aiders', models.BooleanField(default=False, help_text='Is it easy to identify/find first aiders?')),
                ('electricity_obvious_defects_electrical_equipment', models.BooleanField(default=False, help_text='Are there any obvious defects in electrical equipment?', verbose_name='Electrical Equipment Defects')),
                ('sockets_overloaded', models.BooleanField(default=False, help_text='Are any electrical sockets overloaded?')),
                ('all_electrical_equipment_inspected', models.BooleanField(default=False, help_text='Has all electrical equipment been inspected?')),
                ('circulation_routes_kept_clear_obstructions_wires_cables_boxes', models.BooleanField(default=False, help_text='Are circulation routes kept clear of obstructions?', verbose_name='Clear Circulation Routes')),
                ('harmful_substances_in_use_precautions_agreed', models.TextField(blank=True, help_text='Details about harmful substances in use and precautions', null=True)),
                ('comments', models.TextField(blank=True, help_text='Any additional comments about the health and safety inspection', null=True)),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health_safety_checklist', to='inspections.baseinspection')),
            ],
            options={
                'verbose_name': 'Health & Safety Checklist',
                'verbose_name_plural': 'Health & Safety Checklists',
            },
        ),
        migrations.CreateModel(
            name='SmokeAlarmWeekly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, help_text='Location of the smoke alarm being inspected', max_length=255, null=True)),
                ('installed_condition_ok', models.BooleanField(default=False, help_text='Is the smoke alarm properly installed and in good condition?', verbose_name='Installation Condition OK')),
                ('alarm_functional', models.BooleanField(default=False, help_text='Is the smoke alarm functioning correctly?', verbose_name='Alarm Functional')),
                ('battery_replaced', models.BooleanField(default=False, help_text='Has the battery been replaced as needed?')),
                ('faults_identified', models.TextField(blank=True, help_text='Description of any faults found during inspection', null=True, verbose_name='Identified Faults')),
                ('action_taken', models.TextField(blank=True, help_text='Corrective actions taken to address identified faults', null=True)),
                ('management_book_initials', models.CharField(blank=True, help_text='Initials in the management book confirming inspection', max_length=10, null=True)),
                ('comments', models.TextField(blank=True, help_text='Additional comments about the smoke alarm inspection', null=True)),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='smoke_alarm_weekly', to='inspections.baseinspection')),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyMedicationAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(help_text='Full name of the client being audited', max_length=255)),
                ('client_id', models.CharField(help_text='Unique identifier for the client', max_length=100)),
                ('date_of_audit', models.DateField(help_text='Date when the medication audit was conducted')),
                ('auditor_name', models.CharField(help_text='Name of the person conducting the audit', max_length=255)),
                ('medications_cabinet_securely_locked', models.BooleanField(default=False, help_text='Is the medication cabinet securely locked?')),
                ('medication_cabinet_clean_no_spillages', models.BooleanField(default=False, help_text='Is the medication cabinet clean with no spillages?', verbose_name='Medication Cabinet Clean')),
                ('medications_have_opening_dates_original_labels', models.BooleanField(default=False, help_text='Do all medications have opening dates and original labels?', verbose_name='Proper Medication Labeling')),
                ('medication_label_has_client_details', models.BooleanField(default=False, help_text='Do medication labels include client details?')),
                ('medication_stored_correctly', models.BooleanField(default=False, help_text='Are all medications stored correctly according to requirements?')),
                ('current_marr_sheet_match_client_records', models.BooleanField(default=False, help_text='Does the current MARR sheet match client records?', verbose_name='MARR Sheet Accuracy')),
                ('marr_sheet_list_all_medications_prescribed', models.BooleanField(default=False, help_text='Does the MARR sheet list all prescribed medications?', verbose_name='Complete MARR Sheet')),
                ('gap_on_marr_sheet', models.BooleanField(default=False, help_text='Are there any gaps in the MARR sheet documentation?')),
                ('boxed_bottled_medications_stock_count_entered', models.BooleanField(default=False, help_text='Are stock counts entered for boxed/bottled medications?', verbose_name='Stock Count Entered')),
                ('all_documentation_black_ink', models.BooleanField(default=False, help_text='Is all documentation completed in black ink?')),
                ('control_drug_for_client', models.BooleanField(default=False, help_text='Are there any controlled drugs for this client?', verbose_name='Controlled Drugs Present')),
                ('controlled_drugs_stored_recorded_correctly_count_correct', models.BooleanField(default=False, help_text='Are controlled drugs stored, recorded, and counted correctly?', verbose_name='Controlled Drugs Properly Managed')),
                ('prn_medications', models.BooleanField(default=False, help_text='Are there any PRN (as-needed) medications?', verbose_name='PRN Medications Present')),
                ('directives_for_prn_clear_comprehensive', models.BooleanField(default=False, help_text='Are directives for PRN medications clear and comprehensive?', verbose_name='Clear PRN Directives')),
                ('medication_count_accurate', models.BooleanField(default=False, help_text='Is the medication count accurate?')),
                ('medication_expiry_checked', models.BooleanField(default=False, help_text='Have medication expiry dates been checked?')),
                ('missing_administration_why', models.TextField(blank=True, help_text='Explanation for any missing administrations', null=True, verbose_name='Missing Administration Reason')),
                ('any_issues', models.TextField(blank=True, help_text='Any issues identified during the audit', null=True)),
                ('staff_signature', models.CharField(help_text='Signature of staff member completing the audit', max_length=255)),
                ('comments', models.TextField(blank=True, help_text='Additional comments about the audit', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when this audit record was created')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_medication_audit', to='inspections.baseinspection')),
            ],
            options={
                'verbose_name': 'Weekly Medication Audit',
                'verbose_name_plural': 'Weekly Medication Audits',
                'ordering': ['-date_of_audit', 'client_name'],
            },
        ),
    ]
